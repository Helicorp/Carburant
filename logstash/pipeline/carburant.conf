input {
  file {
    start_position => "beginning"
    path => "/tmp/mytmpfs/*.xml"
    codec => multiline {
      pattern => "<pdv"
      negate => "true"
      what => "previous"
      auto_flush_interval => 1
      charset => "ISO-8859-1"
    }
  }
}
filter {
	xml {
			source => "message"
			force_array => "false"
			store_xml => "false"
			xpath => [
			    "//pdv/@id", "id",
          "//pdv/prix/@nom", "carburant",
          "//pdv/prix/@valeur", "prix",
          "//pdv/prix/@maj", "maj",
          "//pdv/ville/text()", "Ville",
          "//pdv/@cp", "Code postale",
          "//pdv/adresse/text()", "Adresse",
          "//pdv/@latitude", "Latitude",
          "//pdv/@longitude", "Longitude",
          "//pdv/horaires/@automate-24-24", "24/24"
        ]
  }
     ruby {
        code => '
            if event.get("carburant")
              f1 = event.get("carburant")
              f2 = event.get("prix")
              f3 = event.get("maj")
              a = []
              f1.each_index { |i|
                  a << "#{f1[i]};#{f2[i]};#{f3[i]}"
              }
              event.set("result", a)

              Longitude_t = event.get("Longitude").to_f / 100000
              Latitude_t = event.get("Latitude").to_f / 100000
              event.remove("Longitude")
              event.remove("Latitude")
              event.set("Longitude", Longitude_t)
              event.set("Latitude", Latitude_t)
            end
        '
    }
        split { 
          field => "result"
        }

        mutate{
        remove_field => ["carburant"]
        remove_field => ["prix"]
        remove_field => ["maj"]
        }
        mutate { 
          split => { "result" => ";" }
          add_field => {
                "Carburant" => "%{[result][0]}"
                "Prix" => "%{[result][1]}"
                "Date de chargement" => "%{[result][2]}"
                }
      rename => {
          "Longitude" => "[location][lon]"
          "Latitude" => "[location][lat]"
      }
            remove_field => ["result", "tags", "@version","host", "path", "message", "@timestamp"]
        }


        date {
        match => [ "Date de chargement", "yyyy-MM-dd HH:mm:ss" ]
        target => "Date de chargement"
      }

        fingerprint {
    source => ["id", "Carburant", "Prix", "Date de chargement"]
    target => "[@metadata][fingerprint]"
    method => "SHA1"
    key => "Log analytics"
    base64encode => true
  }
}
output{
  if "[Prix]" != '\"%{[result][1]}\"'{
    elasticsearch {
        hosts => ["http://192.168.1.18:9200"]
        index => "carburant-[annee]"
        document_id => "%{[@metadata][fingerprint]}"
        }
  }
}